---
import { Speakers } from "./data";
import LinkIcon from "@components/LinkIcon.astro";
import { Icon } from "astro-icon/components";
---

<div class="item-cont">
  <div class="text-white overflow-hidden">
    {
      Speakers.map(({ name, time, socialMedia }, index) => (
        <div class="item">
          <section class="content w-screen">
            <div class="ml-auto px-20">
              <h2 class="text-white text-right">{name}</h2>
              <article class="flex justify-end">
                {socialMedia.map(({ label, link, icon }) => (
                  <LinkIcon
                    href={link}
                    icon={icon}
                    label={label}
                    className="text-white px-2 flex"
                  />
                ))}
              </article>
            </div>
            <Icon name="schedule" size={24} />
            <div class="bg-black/20 p-6 rounded-lg backdrop-blur-sm">
              <div
                id={`world-times-${index}`}
                class="space-y-2"
                data-chile-time={time}
              />
            </div>
          </section>
        </div>
      ))
    }
  </div>
</div>

<script type="module">
  function convertChileTimeToWorldTimes(chileTimeString, containerId) {
    const [hours, minutes = 0] = chileTimeString.split(":").map(Number);
    const chileDate = new Date();
    chileDate.setHours(hours, minutes, 0, 0);

    const timezones = [
      { country: "Chile", timezone: "America/Santiago", flag: "ðŸ‡¨ðŸ‡±" },
      { country: "Argentina", timezone: "America/Buenos_Aires", flag: "ðŸ‡¦ðŸ‡·" },
      { country: "Brasil", timezone: "America/Sao_Paulo", flag: "ðŸ‡§ðŸ‡·" },
      { country: "MÃ©xico", timezone: "America/Mexico_City", flag: "ðŸ‡²ðŸ‡½" },
      { country: "Colombia", timezone: "America/Bogota", flag: "ðŸ‡¨ðŸ‡´" },
      { country: "EspaÃ±a", timezone: "Europe/Madrid", flag: "ðŸ‡ªðŸ‡¸" },
      {
        country: "Estados Unidos (NY)",
        timezone: "America/New_York",
        flag: "ðŸ‡ºðŸ‡¸",
      },
      {
        country: "Estados Unidos (LA)",
        timezone: "America/Los_Angeles",
        flag: "ðŸ‡ºðŸ‡¸",
      },
    ];

    const timeContainer = document.getElementById(containerId);
    if (!timeContainer) return;

    timeContainer.innerHTML = "";

    const gridContainer = document.createElement("div");
    gridContainer.className =
      "grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3";

    timezones.forEach((tz) => {
      const localTime = new Date(chileDate.getTime());
      const timeString = localTime.toLocaleString("es-ES", {
        timeZone: tz.timezone,
        hour: "2-digit",
        minute: "2-digit",
        hour12: true,
      });

      const timeElement = document.createElement("div");
      timeElement.className =
        "text-white flex flex-col items-center text-center p-2 bg-black/30 rounded-lg";
      timeElement.innerHTML = `
      <div class="text-4xl mb-2 flag-emoji">${tz.flag}</div>
        <div class="text-xs font-semibold mb-1">${tz.country}</div>
        <div style="font-size: 32px; font-weight: bold;">${timeString}</div>
      `;

      gridContainer.appendChild(timeElement);
    });

    timeContainer.appendChild(gridContainer);
  }

  document.addEventListener("DOMContentLoaded", () => {
    const timeContainers = document.querySelectorAll('[id^="world-times-"]');

    timeContainers.forEach((container) => {
      const chileTime = container.getAttribute("data-chile-time");
      if (chileTime) {
        convertChileTimeToWorldTimes(chileTime, container.id);
      }
    });
  });
</script>

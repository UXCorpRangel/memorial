---
import { bannerData } from './data.js';
---

<section class="w-full py-12 lg:py-32 max-w-screen-2xl mx-auto">
  <div>
    <div class="flex flex-col lg:flex-row gap-8 px-8 py-8 bg-[radial-gradient(135.68%_278.42%_at_8.47%_26.88%,rgba(67,39,51,0.5)_0%,rgba(34,32,46,0.5)_100%)]">
      <!-- Slider de imÃ¡genes -->
       <section class="flex flex-col relative items-center gap-4">
         <div class="relative">
           <div class="slider-container overflow-hidden w-[450px]">
             <div class="slider-track flex transition-transform duration-500 ease-in-out" id="banner-slider">
               {bannerData.images.map((image, index) => (
                 <div class="slider-slide flex-none w-full">
                   <img
                     src={image.src}
                     alt={image.alt}
                     loading="lazy"
                     class="w-[450px] h-[450px] object-cover select-none pointer-events-none"
                   />
                 </div>
               ))}
             </div>
           </div>

         </div>
         <!-- Indicadores -->
         <div class=" left-1/2 transform  flex space-x-2">
           {bannerData.images.map((_, index) => {
             return (
             <button
               class={`${index === 0 ? 'bg-[#F3384A] w-6' : 'bg-[#383848] w-2'} h-2 rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-primary-500 indicator`}
               data-slide={index}
               aria-label={`Ir a imagen ${index + 1}`}
             />
           )})}
         </div>
       </section>

      <div class="space-y-6  w-full flex flex-col justify-center pl-8">
        <div class="space-y-4">
          <h2 class="text-[32px] font-bold text-white">
            {bannerData.title}
          </h2>
          <p class="text-[16px] text-white leading-relaxed whitespace-pre-line">
            {bannerData.description}
          </p>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  class BannerSlider {
    private currentSlide = 0;
    private slides: HTMLElement[];
    private indicators: HTMLElement[];
    private track: HTMLElement;
    private autoplayInterval: number | null = null;

    constructor() {
      this.track = document.getElementById('banner-slider') as HTMLElement;
      this.slides = Array.from(this.track.children) as HTMLElement[];
      this.indicators = Array.from(document.querySelectorAll('.indicator')) as HTMLElement[];

      this.init();
    }

    init() {
      // Event listeners for navigation buttons
      document.getElementById('prev-btn')?.addEventListener('click', () => this.prevSlide());
      document.getElementById('next-btn')?.addEventListener('click', () => this.nextSlide());

      // Event listeners for indicators
      this.indicators.forEach((indicator, index) => {
        indicator.addEventListener('click', () => this.goToSlide(index));
      });

      // Keyboard navigation
      document.addEventListener('keydown', (e) => {
        if (e.key === 'ArrowLeft') this.prevSlide();
        if (e.key === 'ArrowRight') this.nextSlide();
      });

      // Auto-play
      this.startAutoplay();

      // Pause on hover
      this.track.addEventListener('mouseenter', () => this.pauseAutoplay());
      this.track.addEventListener('mouseleave', () => this.startAutoplay());
    }

    goToSlide(index: number) {
      this.currentSlide = index;
      this.updateSlider();
    }

    nextSlide() {
      this.currentSlide = (this.currentSlide + 1) % this.slides.length;
      this.updateSlider();
    }

    prevSlide() {
      this.currentSlide = this.currentSlide === 0 ? this.slides.length - 1 : this.currentSlide - 1;
      this.updateSlider();
    }

    updateSlider() {
      const translateX = -this.currentSlide * 100;
      this.track.style.transform = `translateX(${translateX}%)`;

      // Update indicators
      this.indicators.forEach((indicator, index) => {
        const isActive = index === this.currentSlide;

        indicator.classList.toggle('w-6', isActive);
        indicator.classList.toggle('w-2', !isActive);

        indicator.classList.toggle('bg-[#F3384A]', isActive);
        indicator.classList.toggle('bg-[#383848]', !isActive);

        // Accesibilidad opcional
        indicator.setAttribute('aria-current', isActive ? 'true' : 'false');
      });
    }

    startAutoplay() {
      this.autoplayInterval = window.setInterval(() => {
        this.nextSlide();
      }, 4000);
    }

    pauseAutoplay() {
      if (this.autoplayInterval) {
        clearInterval(this.autoplayInterval);
        this.autoplayInterval = null;
      }
    }
  }

  // Initialize slider when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    new BannerSlider();
  });
</script>
